plot(gam1[m_stop_cvm])
############################
### Garcia et al. (2005) ###
############################
rm(list = ls())
start.time <- Sys.time()
library(mboost)
set.seed(123)
### Container & Simulation Setup ------
n_sim <- 50
n_algos <- 8
mse <- matrix(NA, nrow = n_sim, ncol = n_algos)
train_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_train.rds")
test_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_test.rds")
mc_iter <- 10
### GAMBoost model construction & prediction ------
gam1 <- gamboost(DEXfat~., data = train_splits[[mc_iter]], control = boost_control(mstop = 500, nu = 0.1))
m_stop_cvm <- mstop(aic <- AIC(gam1))
plot(gam1[m_stop_cvm])
############################
### Garcia et al. (2005) ###
############################
rm(list = ls())
start.time <- Sys.time()
library(mboost)
set.seed(123)
### Container & Simulation Setup ------
n_sim <- 50
n_algos <- 8
mse <- matrix(NA, nrow = n_sim, ncol = n_algos)
train_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_train.rds")
test_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_test.rds")
mc_iter <- 10
### GAMBoost model construction & prediction ------
gam1 <- gamboost(DEXfat~., data = train_splits[[mc_iter]], control = boost_control(mstop = 500, nu = 0.1))
m_stop_cvm <- mstop(aic <- AIC(gam1))
# export figure
pdf("../../06_Plots/Real_World_Application/garcia_linear_effects_gam.pdf", width = 6, height=5)
plot(mfrow = c(3,2))
plot(gam1[m_stop_cvm])
dev.off()
############################
### Garcia et al. (2005) ###
############################
rm(list = ls())
start.time <- Sys.time()
library(mboost)
set.seed(123)
### Container & Simulation Setup ------
n_sim <- 50
n_algos <- 8
mse <- matrix(NA, nrow = n_sim, ncol = n_algos)
train_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_train.rds")
test_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_test.rds")
mc_iter <- 10
### GAMBoost model construction & prediction ------
gam1 <- gamboost(DEXfat~., data = train_splits[[mc_iter]], control = boost_control(mstop = 500, nu = 0.1))
m_stop_cvm <- mstop(aic <- AIC(gam1))
# export figure
pdf("../../06_Plots/Real_World_Application/garcia_linear_effects_gam.pdf", width = 6, height=5)
par(mfrow = c(3,2))
plot(gam1[m_stop_cvm])
dev.off()
############################
### Garcia et al. (2005) ###
############################
rm(list = ls())
start.time <- Sys.time()
library(mboost)
set.seed(123)
### Container & Simulation Setup ------
n_sim <- 50
n_algos <- 8
mse <- matrix(NA, nrow = n_sim, ncol = n_algos)
train_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_train.rds")
test_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_test.rds")
mc_iter <- 10
### GAMBoost model construction & prediction ------
gam1 <- gamboost(DEXfat~., data = train_splits[[mc_iter]], control = boost_control(mstop = 500, nu = 0.1))
m_stop_cvm <- mstop(aic <- AIC(gam1))
# export figure
pdf("../../06_Plots/Real_World_Application/garcia_partial_effects_gam.pdf", width = 6, height=5)
par(mfrow = c(3,2))
plot(gam1[m_stop_cvm], ylim = c(-6,6))
dev.off()
############################
### Garcia et al. (2005) ###
############################
rm(list = ls())
start.time <- Sys.time()
library(mboost)
set.seed(123)
### Container & Simulation Setup ------
n_sim <- 50
train_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_train.rds")
test_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_test.rds")
mc_iter <- 10
### GAMBoost model construction & prediction ------
gam1 <- gamboost(DEXfat~., data = train_splits[[mc_iter]], control = boost_control(mstop = 500, nu = 0.1))
m_stop_cvm <- mstop(aic <- AIC(gam1))
# export figure
pdf("../../06_Plots/Real_World_Application/garcia_partial_effects_gam.pdf", width = 6, height=5)
par(mfrow = c(3,2))
plot(gam1[m_stop_cvm], ylim = c(-6,6))
dev.off()
############################
### Garcia et al. (2005) ###
############################
rm(list = ls())
start.time <- Sys.time()
library(mboost)
set.seed(123)
### Container & Simulation Setup ------
n_sim <- 50
train_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_train.rds")
test_splits <- readRDS(file = "../99_Stored_Data/garcia_data_splits_test.rds")
mc_iter <- 10
### GAMBoost model construction & prediction ------
gam1 <- gamboost(DEXfat~., data = train_splits[[mc_iter]], control = boost_control(mstop = 500, nu = 0.1))
m_stop_cvm <- mstop(aic <- AIC(gam1))
# export figure
pdf("../../06_Plots/Real_World_Application/garcia_partial_effects_gam.pdf")
par(mfrow = c(3,2))
plot(gam1[m_stop_cvm], ylim = c(-6,6))
dev.off()
rm(list = ls())
'
Plot resulting data from schmid_hothorn.R mse decomposition
'
n_boost <- 300
boost_variance_bias_mse_glm <- readRDS("../99_Stored_Data/garcia_mse_development_glm.rds")
boost_variance_bias_mse_gam <- readRDS("../99_Stored_Data/garcia_mse_development_glm.rds")
pdf("../../06_Plots/Real_World_Application/garcia_bias_variance_glm.pdf", width = 6, height=4)
plot(seq(n_boost), apply(boost_variance_bias_mse_glm, 2, mean),
type = "l",
ylim = c(10,15),
xlab = "Boosting iterations",
ylab = "MSE",
main = "Real World Application - MSE Development")
abline(h = 11.6955, lty = 2)
dev.off()
pdf("../../06_Plots/Real_World_Application/garcia_bias_variance_gam.pdf", width = 6, height=4)
plot(seq(n_boost), apply(boost_variance_bias_mse_gam, 2, mean),
type = "l",
ylim = c(10,15),
xlab = "Boosting iterations",
ylab = "MSE",
main = "Real World Application - MSE Development")
abline(h = 11.7536, lty = 2)
dev.off()
mse_df <- readRDS("../99_Stored_Data/garcia_degrees_of_freedom.rds")
##### GGPLOT2 Implementation ------
stack(mse_df)
mse_df
##### GGPLOT2 Implementation ------
library(ggplot2)
ggplot(mse_df)+geom_boxplot()
df <- data.frame(mse_df)
stack(df)
stack(mse_df_dataframe)
mse_df_dataframe <- data.frame(mse_df)
stack(mse_df_dataframe)
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
xlab(2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6)
mse_df_dataframe <- data.frame(mse_df)
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
scale_x_discrete(labels=c("X1" = "2.5", "X2" = "3", "X3" = "3.5", "X4" = "4", "X5" = "4.5", "X6" = "5", "X7" = "5.5", "X8" = "6"))
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
scale_x_discrete(labels=c("X1" = "2.5", "X2" = "3", "X3" = "3.5", "X4" = "4", "X5" = "4.5", "X6" = "5", "X7" = "5.5", "X8" = "6"))+
theme_bw()+
theme()
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
scale_x_discrete(labels=c("X1" = "2.5", "X2" = "3", "X3" = "3.5", "X4" = "4", "X5" = "4.5", "X6" = "5", "X7" = "5.5", "X8" = "6"))+
theme_bw()+
theme(panel.grid = element_blank())
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
scale_x_discrete(labels=c("X1" = "2.5", "X2" = "3", "X3" = "3.5", "X4" = "4", "X5" = "4.5", "X6" = "5", "X7" = "5.5", "X8" = "6"))+
xlab("Degrees of freedom")+
ylab("MSE")
ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
scale_x_discrete(labels=c("X1" = "2.5", "X2" = "3", "X3" = "3.5", "X4" = "4", "X5" = "4.5", "X6" = "5", "X7" = "5.5", "X8" = "6"))+
xlab("Degrees of freedom")+
ylab("MSE")+
theme_bw()+
theme(panel.grid = element_blank())
library(ggplot2)
library(dplyr)
library(gridExtra)
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean))
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(11.7536)
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual(name = "",
values=c(1,3,2), labels=c("MSE","Squared Bias", "Variance"))
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(11.7536)+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
)
library(dplyr)
library(gridExt
##### GGPLOT2 IMPLEMENTATION
library(ggplot2)
##### GGPLOT2 IMPLEMENTATION
library(ggplot2)
library(dplyr)
library(gridExtra)
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean))
n_boost <- 300
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean))
boost_variance_bias_mse_gam <- readRDS("../99_Stored_Data/garcia_mse_development_glm.rds")
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean))
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(11.7536)+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(aes(y=11.7536))+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=[11.7536])+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
rm(list = ls())
'
Plot resulting data from schmid_hothorn.R as boxplots
'
mse_df <- readRDS("../99_Stored_Data/garcia_degrees_of_freedom.rds")
pdf("../../06_Plots/Real_World_Application/garcia_boxplot.pdf", width = 6, height=4)
boxplot(mse_df, use.cols = TRUE, xlab = "Degrees of freedom", ylab = "MSE", xaxt = "n")
axis(1, at = 1:8, labels = c(2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6))
dev.off()
##### GGPLOT2 Implementation ------
library(ggplot2)
mse_df_dataframe <- data.frame(mse_df)
box <- ggplot(stack(mse_df_dataframe), aes(x = ind, y = values))+
geom_boxplot()+
scale_x_discrete(labels=c("X1" = "2.5", "X2" = "3", "X3" = "3.5", "X4" = "4", "X5" = "4.5", "X6" = "5", "X7" = "5.5", "X8" = "6"))+
xlab("Degrees of freedom")+
ylab("MSE")+
theme_bw()+
theme(panel.grid = element_blank())
ggsave(box, file = "../../06_Plots/Real_World_Application/garcia_boxplot.pdf", width = 6, height=3)
rm(list = ls())
'
Plot resulting data from schmid_hothorn.R mse decomposition
'
n_boost <- 300
boost_variance_bias_mse_glm <- readRDS("../99_Stored_Data/garcia_mse_development_glm.rds")
boost_variance_bias_mse_gam <- readRDS("../99_Stored_Data/garcia_mse_development_glm.rds")
library(ggplot2)
library(dplyr)
library(gridExtra)
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean))
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=[11.7536])+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536)+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536, linetype = "AIC-stopped")+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536, linetype = "AIC-stopped")+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536, linetype = "AIC-stopped")+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536)+#, linetype = "AIC-stopped")+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536, linetype = "AIC-stopped")+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536, linetype = 2)+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
ggtitle("Uncorrelated Design - MSE Decomposition")+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_hline(yintercept=11.7536, linetype = 2)+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean), line = rep(seq(n_boost), 11.7536))
df
df <- data.frame(x = seq(n_boost), MSE = apply(boost_variance_bias_mse_gam, 2, mean))
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_line(yintercept=11.7536, linetype = 2)+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_line(aes(x=x, y=11.7536), linetype = "AIC-stopped")+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_line(aes(x=x, y=11.7536, linetype = "AIC-stopped"))+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "MSE"))+
geom_line(aes(x=x, y=11.7536, linetype = "AIC-stopped"))+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(2,1), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "AIC-stopped"))+
geom_line(aes(x=x, y=11.7536, linetype = "MSE-stopped"))+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(2,1), labels = c("MSE", "AIC-stopped"))
df_plot
df_plot <- df %>%
ggplot()+
geom_line(aes(x=x, y= MSE, linetype = "AIC-stopped"))+
geom_line(aes(x=x, y=11.7536, linetype = "MSE-stopped"))+
xlab("Boosting iterations")+
ylab("MSE")+
ggtitle("Real World Application - MSE Development")+
ylim(10,15)+
theme_bw()+
theme(panel.grid = element_blank(), legend.position = "bottom")+
scale_linetype_manual("", values = c(1,2), labels = c("MSE", "AIC-stopped"))
df_plot
ggsave(df_plot, file = "../../06_Plots/Real_World_Application/garcia_bias_variance_gam.pdf", width = 6, height = 4)
rm(list = ls())
boost_object <- readRDS("../99_Stored_Data/garcia_boost_objects.rds")
# pdf("../../06_Plots/Real_World_Application/garcia_partial_effects_gam.pdf")
# par(mfrow = c(2,3))
# plot(boost_object[[1]])
# dev.off()
pdf("../../06_Plots/Real_World_Application/garcia_linear_effects_glm.pdf", width = 6, height=5)
par(mar = c(5,5,1,6))
plot(boost_object[[2]], ylim = c(0, 4), main = "")
dev.off()
boost_object_noise <- readRDS("../99_Stored_Data/garcia_boost_objects_noise.rds")
pdf("../../06_Plots/Real_World_Application/garcia_partial_effects_gam_noise.pdf", width = 6, height=8.5)
par(mfrow = c(3,3))
plot(boost_object_noise[[1]],  ylim = c(-6,6), main = "")
dev.off()
pdf("../../06_Plots/Real_World_Application/garcia_linear_effects_glm_noise.pdf", width = 6, height=5)
par(mar = c(5,5,1,6))
plot(boost_object_noise[[2]],  ylim = c(-2,4), main = "")
dev.off()
rm(list = ls())
library(caret)
library(dplyr)
library(magrittr)
set.seed(123)
#### Data Import ------
data("bodyfat", package = "TH.data")
library(TH.data)
